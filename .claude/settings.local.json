{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(python -m pytest --co -q)",
      "Bash(python -m pytest tests/test_auth_service.py -v)",
      "Bash(python -m pytest tests/test_financial_extractor.py -v)",
      "Bash(python -m pytest tests/test_formula_engine.py -v)",
      "Bash(python -m pytest --co)",
      "Bash(python:*)",
      "Bash(timeout 60 python -m pytest --tb=no -x)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm ls:*)",
      "Bash(ls:*)",
      "Bash(git mv:*)",
      "Bash(npm test)",
      "Bash(rm:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npm run test:*)",
      "Bash(npx vitest run:*)",
      "Bash(find:*)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(npm test:*)",
      "Bash(npx vitest:*)",
      "Bash(timeout 240 npm test)",
      "Bash(cp:*)",
      "Bash(dir)",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" run_migrations.py)",
      "Bash(pytest:*)",
      "Bash(flake8:*)",
      "Bash(py:*)",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(railway logs:*)",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m alembic revision -m \"fix_duplicate_indexes\")",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m alembic check)",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -c \"import alembic.versions.006_add_advanced_indexes; import alembic.versions.007_add_missing_user_columns; import alembic.versions.9dd5d1ac7ef0_fix_duplicate_indexes; print(''✅ All migrations syntax is valid'')\")",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m py_compile \"C:\\Python Dev Folder\\fin-model\\fin-model\\backend\\alembic\\versions\\006_add_advanced_indexes.py\")",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m py_compile \"C:\\Python Dev Folder\\fin-model\\fin-model\\backend\\alembic\\versions\\007_add_missing_user_columns.py\")",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m py_compile \"C:\\Python Dev Folder\\fin-model\\fin-model\\backend\\alembic\\versions\\9dd5d1ac7ef0_fix_duplicate_indexes.py\")",
      "Bash(railway status:*)",
      "Bash(railway deploy:*)",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m py_compile \"C:\\Python Dev Folder\\fin-model\\fin-model\\backend\\alembic\\versions\\008_add_enhanced_auth_tables.py\")",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -c \"import alembic.versions.006_add_advanced_indexes; import alembic.versions.007_add_missing_user_columns; import alembic.versions.9dd5d1ac7ef0_fix_duplicate_indexes; import alembic.versions.008_add_enhanced_auth_tables; print(''✅ All migrations syntax is valid'')\")",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m alembic revision -m \"add_parameter_groups_and_history\")",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m py_compile \"C:\\Python Dev Folder\\fin-model\\fin-model\\backend\\alembic\\versions\\93a0bb4bdb0b_add_parameter_groups_and_history.py\")",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m alembic upgrade head)",
      "Bash(git stash:*)",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m alembic revision -m \"add_monte_carlo_simulation_tables\")",
      "Bash(\"C:\\Python Dev Folder\\fin-model\\fin-model\\.venv\\Scripts\\python.exe\" -m py_compile \"C:\\Python Dev Folder\\fin-model\\fin-model\\backend\\alembic\\versions\\e55cf976aaaa_add_monte_carlo_simulation_tables.py\")",
      "Bash(timeout 30 npm test -- dashboard-integration.test.tsx --run)",
      "Bash(mkdir:*)",
      "Bash(timeout 30 npm run build)"
    ],
    "deny": []
  }
}