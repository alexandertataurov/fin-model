name: Deploy to Netlify

on:
  push:
    branches: [main, dev, pre-production]
  pull_request:
    branches: [main, pre-production]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@eae0cfeb286e66ffb5155f1a79b90583a127a68b # v2
        with:
          version: 10

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Run linting
        working-directory: ./frontend
        run: pnpm run lint:ci

      - name: Run type checking
        working-directory: ./frontend
        run: pnpm run type-check

      - name: Run tests
        working-directory: ./frontend
        run: pnpm run test:minimal:ci

      - name: Build for production
        working-directory: ./frontend
        env:
          NODE_ENV: production
          VITE_API_URL: ${{ secrets.VITE_API_URL || 'https://api.finvision.com' }}
          VITE_APP_NAME: FinVision
          VITE_APP_VERSION: ${{ github.sha }}
        run: pnpm run build

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@79e338a95494cff63e8989766a283d91b0564198 # v3.0
        with:
          publish-dir: "./frontend/dist"
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - ${{ github.event.head_commit.message }}"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: build-artifacts
          path: |
            frontend/dist/
            frontend/coverage/
          retention-days: 7
