name: Frontend Quality Checks

on:
  workflow_call:
    inputs:
      working-directory:
        description: "Working directory for frontend"
        required: false
        type: string
        default: "./frontend"
      run-tests:
        description: "Whether to run tests"
        required: false
        type: boolean
        default: true
      test-command:
        description: "Test command to run"
        required: false
        type: string
        default: "test:minimal:ci"

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@eae0cfeb286e66ffb5155f1a79b90583a127a68b # v2
        with:
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@2f8e54208210a422b2efd51efaa6bd6d7ca8920f # v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: pnpm install --frozen-lockfile

      - name: Run linting
        working-directory: ${{ inputs.working-directory }}
        run: pnpm run lint:ci

      - name: Run type checking
        working-directory: ${{ inputs.working-directory }}
        run: pnpm run type-check

      - name: Run tests
        if: ${{ inputs.run-tests }}
        working-directory: ${{ inputs.working-directory }}
        run: pnpm run ${{ inputs.test-command }}
        env:
          NODE_ENV: test
