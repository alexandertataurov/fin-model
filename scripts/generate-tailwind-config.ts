/*
  Generates frontend/tailwind.config.js from design tokens.
  Usage: pnpm --filter frontend build:tailwind (runs automatically before Tailwind build)
*/

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const ROOT = path.resolve(__dirname, '..');

const TOKENS_PATH = path.resolve(ROOT, 'frontend', 'src', 'design-system', 'tokens.json');
const OUTPUT_PATH = path.resolve(ROOT, 'frontend', 'tailwind.config.js');

function serialize(obj: unknown, indent = 2): string {
  return JSON.stringify(obj, null, indent)
    .replace(/"/g, "'")
    .replace(/'([0-9]+)'(?=\s*:)/g, '$1');
}

function buildConfig(tokens: any): string {
  const extend = {
    spacing: tokens.spacing ?? {},
    colors: tokens.colors ?? {},
    borderRadius: tokens.borderRadius ?? {},
    fontSize: tokens.typography?.fontSize ?? {},
    fontWeight: tokens.typography?.fontWeight ?? {},
    fontFamily: tokens.typography?.fontFamily ?? {},
    boxShadow: tokens.shadows ?? {},
    zIndex: tokens.zIndex ?? {},
  };

  return `/** AUTO-GENERATED FILE. DO NOT EDIT.\nGenerated by scripts/generate-tailwind-config.ts */\nexport default {\n  darkMode: ['class'],\n  content: [\n    './src/**/*.{ts,tsx}',\n    './index.html',\n    './.storybook/**/*.{js,ts,jsx,tsx}',\n    './docs/**/*.{js,ts,jsx,tsx}',\n  ],\n  safelist: ${`[\n    'bg-blue-600',\n    'bg-blue-800',\n    'bg-gray-700',\n    'bg-gray-500',\n    'bg-purple-700',\n    'bg-orange-700',\n    'bg-yellow-300',\n    'bg-green-400',\n    'bg-blue-400',\n    'bg-amber-50',\n    'bg-amber-600',\n    'bg-amber-700',\n    'bg-red-700',\n    'bg-green-700',\n    'text-lg',\n    'text-sm',\n    'font-semibold',\n    'text-white',\n    'text-amber-600',\n    'text-amber-700',\n    'text-amber-800',\n    'text-red-700',\n    'text-green-700',\n    'text-blue-700',\n    'border-amber-600',\n    'border-red-700',\n    'border-green-700',\n    'border-blue-700',\n    'p-6',\n    'text-center',\n    { pattern: /bg-(blue|gray|purple|orange|yellow|green|amber|red)-(50|100|200|300|400|500|600|700|800|900)/ },\n    { pattern: /text-(lg|sm|white|amber|red|green|blue)-(50|100|200|300|400|500|600|700|800|900)/ },\n    { pattern: /border-(amber|red|green|blue)-(50|100|200|300|400|500|600|700|800|900)/ },\n    { pattern: /font-(semibold)/ },\n    { pattern: /p-6/ },\n    { pattern: /text-center/ },\n  ]`},\n  theme: {\n    container: {\n      center: true,\n      padding: '2rem',\n      screens: {\n        '2xl': '1400px',\n      },\n    },\n    extend: ${serialize(extend, 4)},\n  },\n  plugins: [require('tailwindcss-animate')],\n};\n`;
}

function main() {
  if (!fs.existsSync(TOKENS_PATH)) {
    throw new Error(`tokens.json not found at ${TOKENS_PATH}`);
  }
  const tokensRaw = fs.readFileSync(TOKENS_PATH, 'utf8');
  const tokens = JSON.parse(tokensRaw);
  const out = buildConfig(tokens);
  fs.writeFileSync(OUTPUT_PATH, out, 'utf8');
  console.log(`Generated ${path.relative(ROOT, OUTPUT_PATH)}`);
}

main();
