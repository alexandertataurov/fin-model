# Netlify Configuration for FinVision Frontend

[build]
  base = "frontend"
  command = "pnpm install --frozen-lockfile && pnpm run build:netlify:prod"
  publish = "dist"

  [build.environment]
    NODE_VERSION = "20.11.0"
    # Ultra aggressive build performance optimizations
    NODE_OPTIONS = "--max-old-space-size=8192 --max-semi-space-size=512"
    NODE_ENV = "production"
    VITE_API_URL = "https://fin-model-production.up.railway.app"
    # Disable unnecessary operations
    DISABLE_ESLINT_PLUGIN = "true"
    GENERATE_SOURCEMAP = "false"
    SKIP_PREFLIGHT_CHECK = "true"
    # PNPM optimizations
    PNPM_STORE_DIR = ".pnpm-store"
    # Build cache optimizations
    CI = "true"
    NETLIFY_CACHE_VERSION = "v3"

# Build optimizations
[build.processing]
  skip_processing = true

[build.processing.css]
  bundle = false
  minify = false

[build.processing.js]
  bundle = false
  minify = false

[build.processing.html]
  pretty_urls = false

# SPA routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# API proxy
[[redirects]]
  from = "/api/*"
  to = "https://fin-model-production.up.railway.app/api/:splat"
  status = 200
  force = false
  headers = { X-From = "Netlify" }

# Health check proxy
[[redirects]]
  from = "/health"
  to = "https://fin-model-production.up.railway.app/health"
  status = 200
  force = false

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://*.railway.app wss://*.railway.app; frame-src 'self' https://app.netlify.com;"

# Caching
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=604800"

[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=604800"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=604800"

# Environment-specific configs
[context.production]
  command = "pnpm install --frozen-lockfile && pnpm run build:netlify:prod"
  [context.production.environment]
    NODE_ENV = "production"
    VITE_API_URL = "https://fin-model-production.up.railway.app"

[context.deploy-preview]
  command = "pnpm install --frozen-lockfile && pnpm run build:netlify"
  [context.deploy-preview.environment]
    NODE_ENV = "production"
    VITE_API_URL = "https://fin-model-production.up.railway.app"

[context.branch-deploy]
  command = "pnpm install --frozen-lockfile && pnpm run build:netlify:preview"
  [context.branch-deploy.environment]
    NODE_ENV = "development"
    VITE_API_URL = "https://fin-model-production.up.railway.app"

# Netlify Functions config
[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"

# Local dev config
[dev]
  command = "npm run dev"
  port = 3000
  targetPort = 3000
  autoLaunch = false
