<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="20" failures="4" errors="0" time="34.06">
    <testsuite name="src/pages/__tests__/AdminDashboard.audit-permissions.test.tsx" timestamp="2025-08-09T10:05:44.097Z" hostname="DESKTOP-CSMHNRS" tests="2" failures="1" errors="0" skipped="0" time="20.557">
        <testcase classname="src/pages/__tests__/AdminDashboard.audit-permissions.test.tsx" name="AdminDashboard Audit and Permissions &gt; displays permissions information" time="19.535">
            <system-err>
Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

            </system-err>
            <failure message="Test timed out in 10000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with &quot;testTimeout&quot;." type="Error">
Error: Test timed out in 10000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with &quot;testTimeout&quot;.
            </failure>
        </testcase>
        <testcase classname="src/pages/__tests__/AdminDashboard.audit-permissions.test.tsx" name="AdminDashboard Audit and Permissions &gt; paginates audit logs via Next/Prev controls" time="1.001">
        </testcase>
    </testsuite>
    <testsuite name="src/pages/__tests__/AdminDashboard.logs.test.tsx" timestamp="2025-08-09T10:05:44.108Z" hostname="DESKTOP-CSMHNRS" tests="1" failures="1" errors="0" skipped="0" time="19.557">
        <testcase classname="src/pages/__tests__/AdminDashboard.logs.test.tsx" name="AdminDashboard Logs pagination &gt; renders logs list and paging controls" time="19.535">
            <system-err>
Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

            </system-err>
            <failure message="Test timed out in 10000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with &quot;testTimeout&quot;." type="Error">
Error: Test timed out in 10000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with &quot;testTimeout&quot;.
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/pages/__tests__/AdminDashboard.maintenance.test.tsx" timestamp="2025-08-09T10:05:44.112Z" hostname="DESKTOP-CSMHNRS" tests="1" failures="1" errors="0" skipped="0" time="19.558">
        <testcase classname="src/pages/__tests__/AdminDashboard.maintenance.test.tsx" name="AdminDashboard Maintenance schedules &gt; clears rate limits via Maintenance &gt; Security action" time="19.535">
            <system-err>
Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

            </system-err>
            <failure message="Test timed out in 10000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with &quot;testTimeout&quot;." type="Error">
Error: Test timed out in 10000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with &quot;testTimeout&quot;.
            </failure>
        </testcase>
    </testsuite>
    <testsuite name="src/pages/__tests__/AdminDashboard.overview-maintenance.test.tsx" timestamp="2025-08-09T10:05:44.117Z" hostname="DESKTOP-CSMHNRS" tests="3" failures="1" errors="0" skipped="0" time="21.195">
        <testcase classname="src/pages/__tests__/AdminDashboard.overview-maintenance.test.tsx" name="AdminDashboard Overview and Maintenance &gt; renders healthy overview with no critical alerts" time="1.033">
            <system-err>
Warning: `ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

            </system-err>
        </testcase>
        <testcase classname="src/pages/__tests__/AdminDashboard.overview-maintenance.test.tsx" name="AdminDashboard Overview and Maintenance &gt; shows High CPU Usage alert when cpu_usage &gt; 90" time="15.978">
            <failure message="Unable to find an element with the text: /System Performance/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;min-h-screen bg-background flex items-center justify-center&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;text-center&quot;[39m
      [36m&gt;[39m
        [36m&lt;svg[39m
          [33maria-hidden[39m=[32m&quot;true&quot;[39m
          [33mclass[39m=[32m&quot;lucide lucide-refresh-cw h-8 w-8 animate-spin mx-auto mb-4&quot;[39m
          [33mfill[39m=[32m&quot;none&quot;[39m
          [33mheight[39m=[32m&quot;24&quot;[39m
          [33mstroke[39m=[32m&quot;currentColor&quot;[39m
          [33mstroke-linecap[39m=[32m&quot;round&quot;[39m
          [33mstroke-linejoin[39m=[32m&quot;round&quot;[39m
          [33mstroke-width[39m=[32m&quot;2&quot;[39m
          [33mviewBox[39m=[32m&quot;0 0 24 24&quot;[39m
          [33mwidth[39m=[32m&quot;24&quot;[39m
          [33mxmlns[39m=[32m&quot;http://www.w3.org/2000/svg&quot;[39m
        [36m&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M21 3v5h-5&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M8 16H3v5&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/svg&gt;[39m
        [36m&lt;p[39m
          [33mclass[39m=[32m&quot;text-muted-foreground&quot;[39m
        [36m&gt;[39m
          [0mLoading admin dashboard...[0m
        [36m&lt;/p&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;min-h-screen bg-background flex items-center justify-center&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;text-center&quot;[39m
      [36m&gt;[39m
        [36m&lt;svg[39m
          [33maria-hidden[39m=[32m&quot;true&quot;[39m
          [33mclass[39m=[32m&quot;lucide lucide-refresh-cw h-8 w-8 animate-spin mx-auto mb-4&quot;[39m
          [33mfill[39m=[32m&quot;none&quot;[39m
          [33mheight[39m=[32m&quot;24&quot;[39m
          [33mstroke[39m=[32m&quot;currentColor&quot;[39m
          [33mstroke-linecap[39m=[32m&quot;round&quot;[39m
          [33mstroke-linejoin[39m=[32m&quot;round&quot;[39m
          [33mstroke-width[39m=[32m&quot;2&quot;[39m
          [33mviewBox[39m=[32m&quot;0 0 24 24&quot;[39m
          [33mwidth[39m=[32m&quot;24&quot;[39m
          [33mxmlns[39m=[32m&quot;http://www.w3.org/2000/svg&quot;[39m
        [36m&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M21 3v5h-5&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M8 16H3v5&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/svg&gt;[39m
        [36m&lt;p[39m
          [33mclass[39m=[32m&quot;text-muted-foreground&quot;[39m
        [36m&gt;[39m
          [0mLoading admin dashboard...[0m
        [36m&lt;/p&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m" type="TestingLibraryElementError">
TestingLibraryElementError: Unable to find an element with the text: /System Performance/i. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;min-h-screen bg-background flex items-center justify-center&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;text-center&quot;[39m
      [36m&gt;[39m
        [36m&lt;svg[39m
          [33maria-hidden[39m=[32m&quot;true&quot;[39m
          [33mclass[39m=[32m&quot;lucide lucide-refresh-cw h-8 w-8 animate-spin mx-auto mb-4&quot;[39m
          [33mfill[39m=[32m&quot;none&quot;[39m
          [33mheight[39m=[32m&quot;24&quot;[39m
          [33mstroke[39m=[32m&quot;currentColor&quot;[39m
          [33mstroke-linecap[39m=[32m&quot;round&quot;[39m
          [33mstroke-linejoin[39m=[32m&quot;round&quot;[39m
          [33mstroke-width[39m=[32m&quot;2&quot;[39m
          [33mviewBox[39m=[32m&quot;0 0 24 24&quot;[39m
          [33mwidth[39m=[32m&quot;24&quot;[39m
          [33mxmlns[39m=[32m&quot;http://www.w3.org/2000/svg&quot;[39m
        [36m&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M21 3v5h-5&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M8 16H3v5&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/svg&gt;[39m
        [36m&lt;p[39m
          [33mclass[39m=[32m&quot;text-muted-foreground&quot;[39m
        [36m&gt;[39m
          [0mLoading admin dashboard...[0m
        [36m&lt;/p&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m

Ignored nodes: comments, script, style
[36m&lt;body&gt;[39m
  [36m&lt;div&gt;[39m
    [36m&lt;div[39m
      [33mclass[39m=[32m&quot;min-h-screen bg-background flex items-center justify-center&quot;[39m
    [36m&gt;[39m
      [36m&lt;div[39m
        [33mclass[39m=[32m&quot;text-center&quot;[39m
      [36m&gt;[39m
        [36m&lt;svg[39m
          [33maria-hidden[39m=[32m&quot;true&quot;[39m
          [33mclass[39m=[32m&quot;lucide lucide-refresh-cw h-8 w-8 animate-spin mx-auto mb-4&quot;[39m
          [33mfill[39m=[32m&quot;none&quot;[39m
          [33mheight[39m=[32m&quot;24&quot;[39m
          [33mstroke[39m=[32m&quot;currentColor&quot;[39m
          [33mstroke-linecap[39m=[32m&quot;round&quot;[39m
          [33mstroke-linejoin[39m=[32m&quot;round&quot;[39m
          [33mstroke-width[39m=[32m&quot;2&quot;[39m
          [33mviewBox[39m=[32m&quot;0 0 24 24&quot;[39m
          [33mwidth[39m=[32m&quot;24&quot;[39m
          [33mxmlns[39m=[32m&quot;http://www.w3.org/2000/svg&quot;[39m
        [36m&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M21 3v5h-5&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16&quot;[39m
          [36m/&gt;[39m
          [36m&lt;path[39m
            [33md[39m=[32m&quot;M8 16H3v5&quot;[39m
          [36m/&gt;[39m
        [36m&lt;/svg&gt;[39m
        [36m&lt;p[39m
          [33mclass[39m=[32m&quot;text-muted-foreground&quot;[39m
        [36m&gt;[39m
          [0mLoading admin dashboard...[0m
        [36m&lt;/p&gt;[39m
      [36m&lt;/div&gt;[39m
    [36m&lt;/div&gt;[39m
  [36m&lt;/div&gt;[39m
[36m&lt;/body&gt;[39m
 ❯ waitForWrapper node_modules/.pnpm/@testing-library+dom@8.20.1/node_modules/@testing-library/dom/dist/wait-for.js:166:27
 ❯ findByText node_modules/.pnpm/@testing-library+dom@8.20.1/node_modules/@testing-library/dom/dist/query-helpers.js:86:33
 ❯ src/pages/__tests__/AdminDashboard.overview-maintenance.test.tsx:90:29
            </failure>
        </testcase>
        <testcase classname="src/pages/__tests__/AdminDashboard.overview-maintenance.test.tsx" name="AdminDashboard Overview and Maintenance &gt; runs maintenance: preview cleanup and run cleanup" time="4.08">
            <system-err>
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)

Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)
Warning: An update to AdminDashboard inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act
    at AdminDashboard (/home/alex/projects/fin-model/frontend/src/pages/AdminDashboard.tsx:39:61)

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/services/__tests__/adminApi.contract.test.ts" timestamp="2025-08-09T10:05:44.127Z" hostname="DESKTOP-CSMHNRS" tests="10" failures="0" errors="0" skipped="0" time="0.043">
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; getSystemStats GET /admin/stats" time="0.007">
        </testcase>
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; getUserActivity GET /admin/users/activity-list with params" time="0.005">
        </testcase>
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; getSecurityAudit maps from/to to from_ts/to_ts" time="0.003">
        </testcase>
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; getSystemLogs maps options and envelope default" time="0.002">
        </testcase>
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; getAuditLogs maps filters and envelope" time="0.002">
        </testcase>
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; cleanupFiles POST with dry_run param" time="0.002">
        </testcase>
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; clearRateLimits POST no body" time="0.002">
        </testcase>
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; listUsers GET with pagination and envelope" time="0.002">
        </testcase>
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; updateUser PUT with body" time="0.004">
        </testcase>
        <testcase classname="src/services/__tests__/adminApi.contract.test.ts" name="AdminApiService contracts &gt; bulkUserAction POST with payload" time="0.003">
        </testcase>
    </testsuite>
    <testsuite name="src/services/__tests__/api.client.test.ts" timestamp="2025-08-09T10:05:44.135Z" hostname="DESKTOP-CSMHNRS" tests="3" failures="0" errors="0" skipped="0" time="0.039">
        <testcase classname="src/services/__tests__/api.client.test.ts" name="apiClient interceptors &gt; adds Authorization header when access_token is present" time="0.014">
        </testcase>
        <testcase classname="src/services/__tests__/api.client.test.ts" name="apiClient interceptors &gt; does not add Authorization when token missing" time="0.003">
        </testcase>
        <testcase classname="src/services/__tests__/api.client.test.ts" name="apiClient interceptors &gt; on 401 clears tokens" time="0.009">
        </testcase>
    </testsuite>
</testsuites>
