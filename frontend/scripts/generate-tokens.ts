/*
  Auto-generates src/design-system/tokens.ts from src/design-system/tokens.json
  Usage: pnpm gen:tokens
*/

import fs from 'fs';
import path from 'path';

type DeepRecord = Record<string, any>;

const ROOT = path.resolve(__dirname, '..');
const JSON_PATH = path.join(ROOT, 'src', 'design-system', 'tokens.json');
const OUTPUT_PATH = path.join(ROOT, 'src', 'design-system', 'tokens.ts');

function readJson(filePath: string): DeepRecord {
  const raw = fs.readFileSync(filePath, 'utf8');
  return JSON.parse(raw);
}

function header(): string {
  return `// AUTO-GENERATED FILE. DO NOT EDIT.
// Generated by scripts/generate-tokens.ts from src/design-system/tokens.json

`;
}

function serialize(obj: unknown, indent = 2): string {
  return JSON.stringify(obj, null, indent)
    .replace(/"/g, "'")
    .replace(/'([0-9]+)'(?=\s*:)/g, '$1');
}

function buildTokensTs(tokensJson: DeepRecord): string {
  const {
    colors = {},
    typography = {},
    spacing = {},
    borderRadius = {},
    shadows = {},
    transitions = {},
    zIndex = {},
    cssVariables = {},
  } = tokensJson;

  const tokensBlock = `export const tokens = ${serialize({
    colors,
    typography,
    spacing,
    borderRadius,
    shadows,
    transitions,
    zIndex,
  })} as const;`;

  const cssVarsBlock = `\n\nexport const cssVariables = ${serialize(
    cssVariables
  )} as const;`;

  const utilsBlock = `\n\nexport const getToken = (path: string) => {
  return path.split('.').reduce((obj: any, key: string) => obj?.[key], tokens);
};

export const getCSSVariable = (name: string) => {
  return \`var(\${name})\`;
};
`;

  return header() + tokensBlock + cssVarsBlock + utilsBlock;
}

function main() {
  if (!fs.existsSync(JSON_PATH)) {
    throw new Error(`tokens.json not found at ${JSON_PATH}`);
  }
  const json = readJson(JSON_PATH);
  const out = buildTokensTs(json);
  fs.writeFileSync(OUTPUT_PATH, out, 'utf8');
  // eslint-disable-next-line no-console
  console.log(
    `Generated ${path.relative(ROOT, OUTPUT_PATH)} from ${path.relative(
      ROOT,
      JSON_PATH
    )}`
  );
}

main();
